import { useState } from 'react';
import './DeliveryOption.scss';
import { ExclamationInCircleIcon } from '../ui/Icons';
import RadioBox from '../ui/RadioBox';
import SelectLabel from '../ui/SelectLabel';
import DeliveryCourier from '../DeliveryCourier';
import Notification from '../Notification';

const NotAvailable = ({ message }: { message: string }) => (
  <Notification
    className="delivery-option__notification"
    text={`–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏ ¬´${message}¬ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω üôÑ`}
  />
);
const WAY_DELIVERY = [
  {
    title: '–ó–∞–±—Ä–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ —Å–µ–≥–æ–¥–Ω—è',
    price: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
    hint: '–ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å–µ–π—á–∞—Å –Ω–∞ –ø–æ–ª–∫–∞—Ö. –ó–∞–∫–∞–∑ —Ö—Ä–∞–Ω–∏–º 1 –¥–µ–Ω—å',
    content: <NotAvailable message="–ó–∞–±—Ä–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ —Å–µ–≥–æ–¥–Ω—è" />,
  },
  {
    title: '–î–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω',
    hint: '–ü—Ä–∏–≤–µ–∑–µ–º —Ç–æ–≤–∞—Ä –≤ —É–¥–æ–±–Ω—ã–π –≤–∞–º –º–∞–≥–∞–∑–∏–Ω —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π. –ó–∞–∫–∞–∑ —Ö—Ä–∞–Ω–∏–º 5 –¥–Ω–µ–π',
    disabled: true,
    content: <NotAvailable message="–î–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω" />,
  },
  {
    title: '–ö—É—Ä—å–µ—Ä–æ–º —Å–µ–≥–æ–¥–Ω—è –∏ –ø–æ–∑–∂–µ',
    price: '–æ—Ç 0 ‚ÇΩ',
    hint: '–î–æ—Å—Ç–∞–≤–∏–º –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É',
    content: <DeliveryCourier />,
  },
  {
    title: '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏',
    hint: '–ó–∞–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –≤ –æ–¥–Ω–æ–º –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –≤—ã–¥–∞—á–∏',
    content: <NotAvailable message="–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏" />,
  },
];
type TDeliveryOptionProps = {
  deliveryRegionList: { id: number; name: string }[];
};
function DeliveryOption({
  deliveryRegionList,
}: TDeliveryOptionProps): JSX.Element {
  const [selected, setSelected] = useState(-1);
  return (
    <div className="delivery-option">
      <div className="delivery-option__box-region">
        <SelectLabel className="delivery-option__region" label="–í–∞—à –≥–æ—Ä–æ–¥">
          {deliveryRegionList.map(({ id, name }) => (
            <SelectLabel.Option key={id} value={`${id}`}>
              {name}
            </SelectLabel.Option>
          ))}
        </SelectLabel>

        <div className="delivery-option__exclamation">
          <span>
            <ExclamationInCircleIcon />
          </span>
          <p>
            –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç - –æ—Ç —ç—Ç–æ–≥–æ –∑–∞–≤–∏—Å—è—Ç
            –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∏–¥—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å
          </p>
        </div>
      </div>

      <div className="delivery-option__title">–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:</div>

      <ul className="delivery-option__list">
        {WAY_DELIVERY.map(({ title, price, hint, disabled }, index) => (
          <li key={title} className="delivery-option__item">
            <RadioBox
              className="delivery-option__radio"
              name="delivery"
              view="grid"
              disabled={disabled}
              onChange={() => setSelected(index)}
            >
              <RadioBox.Title>{title}</RadioBox.Title>
              {price && <RadioBox.Price>{price}</RadioBox.Price>}
              <RadioBox.Hint>{hint}</RadioBox.Hint>
            </RadioBox>
          </li>
        ))}
      </ul>

      {selected !== -1 && WAY_DELIVERY[selected].content}
    </div>
  );
}

export default DeliveryOption;
